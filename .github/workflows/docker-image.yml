name: Survey MSA CI/CD Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'survey-gateway',
          'survey-response-gateway',
          'survey-discovery',
          'survey-config-server',
          'survey-service',
#          'survey-admin-service',
          'survey-respondent-service',
          'survey-response-service'
        ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./${{ matrix.service }}/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest  # 추가된 부분
    strategy:
      matrix:
        include:
          - service: survey-gateway
            instance-id: ${{ vars.GATEWAY_INSTANCE_ID }}
            port: 8080
          - service: survey-response-gateway
            instance-id: ${{ vars.RESPONSE_GATEWAY_INSTANCE_ID }}
            port: 8080
          - service: survey-discovery
            instance-id: ${{ vars.SURVEY_DISCOVERY_INSTANCE_ID }}
            port: 8080
          - service: survey-config-server
            instance-id: ${{ vars.SURVEY_CONFIG_SERVER_INSTANCE_ID }}
            port: 8080
          - service: survey-service
            instance-id: ${{ vars.SURVEY_SERVICE_INSTANCE_ID }}
            port: 8080
          - service: survey-admin-service
            instance-id: ${{ vars.SURVEY_ADMIN_SERVICE_INSTANCE_ID }}
            port: 8080
          - service: survey-respondent-service
            instance-id: ${{ vars.SURVEY_RESPONDENT_SERVICE_INSTANCE_ID }}
            port: 8080
          - service: survey-response-service
            instance-id: ${{ vars.SURVEY_RESPONSE_SERVICE_INSTANCE_ID }}
            port: 8080              
    steps:
    - name: Configure AWS credentials  # 추가된 단계
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Deploy Service via AWS SSM
      run: |
        aws ssm send-command \
          --instance-ids ${{ matrix.instance-id }} \
          --document-name "AWS-RunShellScript" \
          --parameters '{"commands":[
            "docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}",
            "docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest",
            "docker stop ${{ matrix.service }} || true",
            "docker rm ${{ matrix.service }} || true",
            "docker run -d --name ${{ matrix.service }} -p ${{ matrix.port }}:8080 ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest"
          ]}'
